<!DOCTYPE html>
<html> <head>
<title>Delayed WebRequest Demo</title>
<%= stylesheet_link_tag "application", :media => "all" %>
<%= javascript_include_tag "application" %>
<%= csrf_meta_tags %>
<script src="http://js.pusher.com/1.11/pusher.min.js" type="text/javascript"></script>
<script type="text/javascript">
<!-- %%wel -->
<!--

//Browser-supporting code:

function AjaxObject(){
  var result;
  try{ //Gecko: Mozilla, Firefox; Webkit: Chrome, Safari; ?: Opera; (etc.?) browsers:
    result = new XMLHttpRequest();
  } catch (e){ //Internet Explorer browsers:
    try{
      result = new ActiveXObject('Msxml2.XMLHTTP');
    } catch (e) {
      try{
        result = new ActiveXObject('Microsoft.XMLHTTP');
      } catch (e){ //Something went wrong:
        alert('Unable to obtain an Ajax object.');
        return false;
      }
    }
  }
  return result;
}

//Other code:

// Enable pusher logging - don't include this in production
Pusher.log = function(message) {
  if (window.console && window.console.log) window.console.log(message);
};

// Flash fallback logging - don't include this in production
WEB_SOCKET_DEBUG = true;
var pusher = new Pusher('<%= Pusher.key %>'); // uses your API KEY
//var channel = pusher.subscribe('abc_xyz');
var channel = pusher.subscribe('<%= @pusher_channel %>');

channel.bind('updates_ready', function(data) {
  alert(data.message);
  requestAjaxUpdate();
});

//TODO: use the DOM ID's of the (actual) replaceable DIV's.
function targetIds() {
  return ["one", "two", "three", "four", "five"];
}

function Target(id) { //From string to property.
  this.id = id;
}

function selectTargets() {
  var targetIdsVar = targetIds();
  var len = targetIdsVar.length;
  var result = new Array(len);
  var each;
  for (var i = 0; i < len; i++) {
    each = targetIdsVar[i];
    result[i] = new Target(each);
  }
  result.push(new Target("junk")); //Temporary test.
  return result;
}

function alterTargets(newContent) {
  //$('#one').css("color","yellow");
  jQuery('#one').css("color","yellow");
  var targets = selectTargets();
  var elem;
  var len = targets.length;
  for (var i = 0; i < len; i++) {
    //elem = jQuery(targets[i].id);
    elem = document.getElementById(targets[i].id);
    if (null === elem) continue;
    //elem.empty();
    //elem.append(becomes);
    elem.innerHTML = newContent;
  }
}

function requestAjaxUpdate() {
  //jQuery.ajax ( '/ajax.json', 
  var r = new AjaxObject();
  //r.open('GET', 'http://ajax-testbed-simple.herokuapp.com/ajax',false); //Synchronous.
  r.open('GET', '/ajax.json',false); //Synchronous.
  r.send();
  //alert(r.status);
  //alert(r.responseText);
  var p = JSON.parse(r.responseText);
  var s = p.message;
  //alert(s);
  alterTargets(s);
}

// When the DOM is fully loaded:
//jQuery(window.document).ready(function() {
window.document.addEventListener('DOMContentLoaded', function() {
  //alert('window.document ready (DOMContentLoaded)');
  //jQuery.get('/ajax.json', 'one', function(response) {
  //alert(response);
}, false);

// When images, etc. are fully loaded:
//jQuery(window).load(function() {
window.onload = function() {
  //alert('window.onload');
};

window.onunload = function() {
  //alert('window.onunload');
  pusher.disconnect(); //Yet still get error in javascript error console.
};

//-->
</script> </head> <body>

<p>From Rails.cache.read:<br /> &nbsp;
<%= @cached_foo %></p>

<div id="error"></div>

<div id="one">one-content</div>
<div id="two">two-content</div>
<div id="three">three-content</div>
<div id="four">four-content</div>
<div id="five">five-content</div>

<%= yield %>

</body> </html>
